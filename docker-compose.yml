version: '3.8'

volumes:
  db_storage:
    driver: local
  n8n_storage:
    driver: local

services:
  postgres:
    image: postgres:16-alpine
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-n8n_strong_password}
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
      - POSTGRES_NON_ROOT_USER=${POSTGRES_NON_ROOT_USER:-n8n}
      - POSTGRES_NON_ROOT_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD:-n8n_strong_password}
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER:-n8n} -d ${POSTGRES_DB:-n8n}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - n8n-network
    ports:
      - "5432:5432"  # Solo para desarrollo, quitar en producción

  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n-main
    restart: unless-stopped
    environment:
      # Configuración de base de datos
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD:-n8n_strong_password}
      
      # Configuración de seguridad
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-super-secret-encryption-key-32-chars}
      
      # Configuración de la aplicación
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - NODE_ENV=production
      
      # Configuración de zona horaria
      - GENERIC_TIMEZONE=${TIMEZONE:-America/Argentina/Buenos_Aires}
      - TZ=${TIMEZONE:-America/Argentina/Buenos_Aires}
      
      # Configuración de webhooks
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678/}
      
      # Configuración de seguridad adicional
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-false}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-admin}
      
      # Configuración de logs
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
      - N8N_LOG_OUTPUT=${N8N_LOG_OUTPUT:-console}
      
      # Configuración de funciones externas (opcional)
      - NODE_FUNCTION_ALLOW_EXTERNAL=axios,lodash,moment
      
      # Configuración de métricas (opcional)
      - N8N_METRICS=true
      - N8N_METRICS_PREFIX=n8n_
      
    ports:
      - "${N8N_PORT:-5678}:5678"
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./local-files:/files:rw
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - n8n-network
    healthcheck:
      test: ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  n8n-network:
    driver: bridge

# Configuración adicional para logging
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"